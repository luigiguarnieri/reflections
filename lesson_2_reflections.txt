What happens when you initialize a repository? Why do you need to do it?
	I guess that git tells me what files are contained inside the repository and then its necessary to let git start tracking those files.

How is the staging area different from the working directory and the repository? What value do you think it offers?
	Staging area is a place where you can put files maintained under version control through a git repository. It can be an entire working directory, or it can be made only by one or more files contained in that directory.

How can you use the staging area to make sure you have one commit per logical change?
	You can use this area to put all changes made to your code, and then commit only those files that represent a logical change.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	Branches are useful when you want to some experimental changes to your code, but you don't want to apply them to the standard version of your code.
	In this way, you can come back to the master branch in every moment, without ruin your previous work.

How do the diagrams help you visualize the branch structure?
	They have given me the chance to understand the relationship between master branch and the other ones. Besides, through tthem, I've understood better the meaning of "DETACHED HEAD" message.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	The result of merging two branches is a new master branch that contains the reached point of the master branch plus the secondary branch where it has been added a new feature or modification to the code.
	The represention oin the diagram gives the idea that it represents a meeting point between tha master branch (official and working) and an experimental branch where has been developed something new. If this new feature works, it can be merged with the master, becoming a new version of the official code.